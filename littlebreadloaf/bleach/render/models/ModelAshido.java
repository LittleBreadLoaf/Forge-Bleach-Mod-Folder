
package littlebreadloaf.bleach.render.models;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class ModelAshido extends ModelBase
{
  //fields
    ModelRenderer body;
    ModelRenderer rightarm;
    ModelRenderer leftarm;
    ModelRenderer rightleg;
    ModelRenderer leftleg;
    ModelRenderer hairback;
    ModelRenderer furarmR;
    ModelRenderer furarmL;
    ModelRenderer head;
    ModelRenderer mask3;
    ModelRenderer mask1;
    ModelRenderer eyeR;
    ModelRenderer mask5;
    ModelRenderer mask2;
    ModelRenderer eyeL;
    ModelRenderer horn3R;
    ModelRenderer horn1R;
    ModelRenderer horn2R;
    ModelRenderer horn1L;
    ModelRenderer horn2L;
    ModelRenderer horn3L;
    ModelRenderer hair2;
    ModelRenderer hair1;
    ModelRenderer hair3;
    ModelRenderer hair3L;
    ModelRenderer hair1L;
    ModelRenderer hair2L;
    ModelRenderer hair6L;
    ModelRenderer hair5L;
    ModelRenderer hair4;
    ModelRenderer hair7;
    ModelRenderer hair5;
    ModelRenderer hair6;
    ModelRenderer hair1R;
    ModelRenderer hair2R;
    ModelRenderer hair3R;
    ModelRenderer hair5R;
    ModelRenderer hair6R;
    ModelRenderer hollowmasksheild1;
    ModelRenderer hollow_mask_sheild3;
    ModelRenderer hollow_mask_sheild2;
    ModelRenderer skullmask2;
    ModelRenderer skullmask3;
    ModelRenderer skullmask1;
    ModelRenderer hornMaskBackHorn1;
    ModelRenderer hornMaskBack2;
    ModelRenderer hornMaskBack1;
    ModelRenderer hornMaskBackHorn2;
    ModelRenderer hornMaskBack3;
  
  public ModelAshido()
  {
    textureWidth = 64;
    textureHeight = 128;
    
      body = new ModelRenderer(this, 16, 16);
      body.addBox(-4F, 0F, -2F, 8, 12, 4);
      body.setRotationPoint(0F, 0F, 0F);
      body.setTextureSize(64, 128);
      body.mirror = true;
      setRotation(body, 0F, 0F, 0F);
      rightarm = new ModelRenderer(this, 40, 16);
      rightarm.addBox(-3F, -2F, -2F, 4, 12, 4);
      rightarm.setRotationPoint(-5F, 2F, 0F);
      rightarm.setTextureSize(64, 128);
      rightarm.mirror = true;
      setRotation(rightarm, 0F, 0F, 0F);
      leftarm = new ModelRenderer(this, 40, 16);
      leftarm.addBox(-1F, -2F, -2F, 4, 12, 4);
      leftarm.setRotationPoint(5F, 2F, 0F);
      leftarm.setTextureSize(64, 128);
      leftarm.mirror = true;
      setRotation(leftarm, 0F, 0F, 0F);
      rightleg = new ModelRenderer(this, 0, 16);
      rightleg.addBox(-2F, 0F, -2F, 4, 12, 4);
      rightleg.setRotationPoint(-2F, 12F, 0F);
      rightleg.setTextureSize(64, 128);
      rightleg.mirror = true;
      setRotation(rightleg, 0F, 0F, 0F);
      leftleg = new ModelRenderer(this, 0, 16);
      leftleg.addBox(-2F, 0F, -2F, 4, 12, 4);
      leftleg.setRotationPoint(2F, 12F, 0F);
      leftleg.setTextureSize(64, 128);
      leftleg.mirror = true;
      setRotation(leftleg, 0F, 0F, 0F);
      hairback = new ModelRenderer(this, 42, 74);
      hairback.addBox(-4.5F, -0.5F, 0.5F, 9, 16, 2);
      hairback.setRotationPoint(0F, 0F, 0F);
      hairback.setTextureSize(64, 128);
      hairback.mirror = true;
      setRotation(hairback, 0F, 0F, 0F);
      furarmR = new ModelRenderer(this, 16, 82);
      furarmR.addBox(-3.5F, -2.5F, -2.5F, 7, 8, 5);
      furarmR.setRotationPoint(0F, 0F, 0F);
      furarmR.setTextureSize(64, 128);
      furarmR.mirror = true;
      setRotation(furarmR, 0F, 0F, 0F);
      furarmL = new ModelRenderer(this, 16, 82);
      furarmL.addBox(-3.5F, -2.5F, -2.5F, 7, 8, 5);
      furarmL.setRotationPoint(0F, 0F, 0F);
      furarmL.setTextureSize(64, 128);
      furarmL.mirror = true;
      setRotation(furarmL, 0F, 0F, 0F);
      head = new ModelRenderer(this, 0, 0);
      head.addBox(-4F, -8F, -4F, 8, 8, 8);
      head.setRotationPoint(0F, 0F, 0F);
      head.setTextureSize(64, 128);
      head.mirror = true;
      setRotation(head, 0F, 0F, 0F);
      mask3 = new ModelRenderer(this, 32, 38);
      mask3.addBox(-2.5F, -8.5F, -5.5F, 5, 2, 3);
      mask3.setRotationPoint(0F, 0F, 0F);
      mask3.setTextureSize(64, 128);
      mask3.mirror = true;
      setRotation(mask3, 0.6981317F, 0F, 0F);
      mask1 = new ModelRenderer(this, 32, 0);
      mask1.addBox(-4.5F, -8.5F, 0F, 9, 5, 6);
      mask1.setRotationPoint(0F, 0F, 0F);
      mask1.setTextureSize(64, 128);
      mask1.mirror = true;
      setRotation(mask1, 0.8726646F, 0F, 0F);
      eyeR = new ModelRenderer(this, 24, 0);
      eyeR.addBox(-2.5F, -9.5F, 1F, 2, 1, 2);
      eyeR.setRotationPoint(0F, 0F, 0F);
      eyeR.setTextureSize(64, 128);
      eyeR.mirror = true;
      setRotation(eyeR, 0.8726646F, 0.122173F, 0F);
      mask5 = new ModelRenderer(this, 32, 43);
      mask5.addBox(-2F, -9.8F, 1F, 4, 1, 2);
      mask5.setRotationPoint(0F, 0F, 0F);
      mask5.setTextureSize(64, 128);
      mask5.mirror = true;
      setRotation(mask5, 1.570796F, 0F, 0F);
      mask2 = new ModelRenderer(this, 32, 32);
      mask2.addBox(-3.5F, -8F, -4F, 7, 3, 3);
      mask2.setRotationPoint(0F, 0F, 0F);
      mask2.setTextureSize(64, 128);
      mask2.mirror = true;
      setRotation(mask2, 0.5235988F, 0F, 0F);
      eyeL = new ModelRenderer(this, 24, 0);
      eyeL.addBox(0.5F, -9.5F, 1F, 2, 1, 2);
      eyeL.setRotationPoint(0F, 0F, 0F);
      eyeL.setTextureSize(64, 128);
      eyeL.mirror = true;
      setRotation(eyeL, 0.8726646F, -0.122173F, 0F);
      horn3R = new ModelRenderer(this, 56, 25);
      horn3R.addBox(-2F, -18F, -1.5F, 1, 3, 1);
      horn3R.setRotationPoint(0F, 0F, 0F);
      horn3R.setTextureSize(64, 128);
      horn3R.mirror = true;
      setRotation(horn3R, 0F, 0F, -0.1745329F);
      horn1R = new ModelRenderer(this, 56, 16);
      horn1R.addBox(-2F, -13F, -4F, 1, 4, 1);
      horn1R.setRotationPoint(0F, 0F, 0F);
      horn1R.setTextureSize(64, 128);
      horn1R.mirror = true;
      setRotation(horn1R, -0.0785398F, 0F, -0.1745329F);
      horn2R = new ModelRenderer(this, 56, 21);
      horn2R.addBox(-2F, -12F, -10F, 1, 3, 1);
      horn2R.setRotationPoint(0F, 0F, 0F);
      horn2R.setTextureSize(64, 128);
      horn2R.mirror = true;
      setRotation(horn2R, -0.6108652F, 0F, -0.1745329F);
      horn1L = new ModelRenderer(this, 56, 16);
      horn1L.addBox(1F, -13F, -4F, 1, 4, 1);
      horn1L.setRotationPoint(0F, 0F, 0F);
      horn1L.setTextureSize(64, 128);
      horn1L.mirror = true;
      setRotation(horn1L, -0.0785398F, 0F, 0.1745329F);
      horn2L = new ModelRenderer(this, 56, 21);
      horn2L.addBox(1F, -12F, -10F, 1, 3, 1);
      horn2L.setRotationPoint(0F, 0F, 0F);
      horn2L.setTextureSize(64, 128);
      horn2L.mirror = true;
      setRotation(horn2L, -0.6108652F, 0F, 0.1745329F);
      horn3L = new ModelRenderer(this, 56, 25);
      horn3L.addBox(1F, -18F, -1.5F, 1, 3, 1);
      horn3L.setRotationPoint(0F, 0F, 0F);
      horn3L.setTextureSize(64, 128);
      horn3L.mirror = true;
      setRotation(horn3L, 0F, 0F, 0.1745329F);
      hair2 = new ModelRenderer(this, 0, 38);
      hair2.addBox(-4.5F, -11.5F, -2F, 9, 3, 3);
      hair2.setRotationPoint(0F, 0F, 0F);
      hair2.setTextureSize(64, 128);
      hair2.mirror = true;
      setRotation(hair2, -0.1396263F, 0F, 0F);
      hair1 = new ModelRenderer(this, 0, 32);
      hair1.addBox(-3.5F, -9F, 5F, 7, 3, 3);
      hair1.setRotationPoint(0F, 0F, 0F);
      hair1.setTextureSize(64, 128);
      hair1.mirror = true;
      setRotation(hair1, 0.7504916F, 0F, 0F);
      hair3 = new ModelRenderer(this, 0, 44);
      hair3.addBox(-5F, -9.5F, -6.5F, 10, 5, 6);
      hair3.setRotationPoint(0F, 0F, 0F);
      hair3.setTextureSize(64, 128);
      hair3.mirror = true;
      setRotation(hair3, -0.7853982F, 0F, 0F);
      hair3L = new ModelRenderer(this, 30, 67);
      hair3L.addBox(3F, 0F, -3F, 3, 3, 4);
      hair3L.setRotationPoint(0F, 0F, 0F);
      hair3L.setTextureSize(64, 128);
      hair3L.mirror = true;
      setRotation(hair3L, 0F, 0F, -0.5934119F);
      hair1L = new ModelRenderer(this, 30, 55);
      hair1L.addBox(6F, -3F, 1F, 2, 2, 3);
      hair1L.setRotationPoint(0F, 0F, 0F);
      hair1L.setTextureSize(64, 128);
      hair1L.mirror = true;
      setRotation(hair1L, 0F, 0F, -0.5934119F);
      hair2L = new ModelRenderer(this, 30, 60);
      hair2L.addBox(4F, -2F, -1F, 3, 3, 4);
      hair2L.setRotationPoint(0F, 0F, 0F);
      hair2L.setTextureSize(64, 128);
      hair2L.mirror = true;
      setRotation(hair2L, 0F, 0F, -0.5934119F);
      hair6L = new ModelRenderer(this, 30, 79);
      hair6L.addBox(4.5F, -4.5F, -3F, 1, 1, 2);
      hair6L.setRotationPoint(0F, 0F, 0F);
      hair6L.setTextureSize(64, 128);
      hair6L.mirror = true;
      setRotation(hair6L, 1.291544F, 0F, 0F);
      hair5L = new ModelRenderer(this, 30, 74);
      hair5L.addBox(4F, -4F, -3F, 2, 2, 3);
      hair5L.setRotationPoint(0F, 0F, 0F);
      hair5L.setTextureSize(64, 128);
      hair5L.mirror = true;
      setRotation(hair5L, 0.7853982F, 0F, 0F);
      hair4 = new ModelRenderer(this, 0, 55);
      hair4.addBox(-5.5F, -7F, 2F, 11, 10, 4);
      hair4.setRotationPoint(0F, 0F, 0F);
      hair4.setTextureSize(64, 128);
      hair4.mirror = true;
      setRotation(hair4, 0F, 0F, 0F);
      hair7 = new ModelRenderer(this, 0, 78);
      hair7.addBox(-3F, 7F, 3.5F, 6, 2, 1);
      hair7.setRotationPoint(0F, 0F, 0F);
      hair7.setTextureSize(64, 128);
      hair7.mirror = true;
      setRotation(hair7, 0F, 0F, 0F);
      hair5 = new ModelRenderer(this, 0, 69);
      hair5.addBox(-5F, 3F, 2.5F, 10, 2, 3);
      hair5.setRotationPoint(0F, 0F, 0F);
      hair5.setTextureSize(64, 128);
      hair5.mirror = true;
      setRotation(hair5, 0F, 0F, 0F);
      hair6 = new ModelRenderer(this, 0, 74);
      hair6.addBox(-4F, 5F, 3F, 8, 2, 2);
      hair6.setRotationPoint(0F, 0F, 0F);
      hair6.setTextureSize(64, 128);
      hair6.mirror = true;
      setRotation(hair6, 0F, 0F, 0F);
      hair1R = new ModelRenderer(this, 30, 55);
      hair1R.addBox(-8F, -3F, 1F, 2, 2, 3);
      hair1R.setRotationPoint(0F, 0F, 0F);
      hair1R.setTextureSize(64, 128);
      hair1R.mirror = true;
      setRotation(hair1R, 0F, 0F, 0.5934119F);
      hair2R = new ModelRenderer(this, 30, 60);
      hair2R.addBox(-7F, -2F, -1F, 3, 3, 4);
      hair2R.setRotationPoint(0F, 0F, 0F);
      hair2R.setTextureSize(64, 128);
      hair2R.mirror = true;
      setRotation(hair2R, 0F, 0F, 0.5934119F);
      hair3R = new ModelRenderer(this, 30, 67);
      hair3R.addBox(-6F, 0F, -3F, 3, 3, 4);
      hair3R.setRotationPoint(0F, 0F, 0F);
      hair3R.setTextureSize(64, 128);
      hair3R.mirror = true;
      setRotation(hair3R, 0F, 0F, 0.5934119F);
      hair5R = new ModelRenderer(this, 30, 74);
      hair5R.addBox(-6F, -4F, -3F, 2, 2, 3);
      hair5R.setRotationPoint(0F, 0F, 0F);
      hair5R.setTextureSize(64, 128);
      hair5R.mirror = true;
      setRotation(hair5R, 0.7853982F, 0F, 0F);
      hair6R = new ModelRenderer(this, 30, 79);
      hair6R.addBox(-5.5F, -4.5F, -3F, 1, 1, 2);
      hair6R.setRotationPoint(0F, 0F, 0F);
      hair6R.setTextureSize(64, 128);
      hair6R.mirror = true;
      setRotation(hair6R, 1.291544F, 0F, 0F);
      hollowmasksheild1 = new ModelRenderer(this, 0, 86);
      hollowmasksheild1.addBox(2F, -9F, -3F, 2, 7, 6);
      hollowmasksheild1.setRotationPoint(1F, 7F, 0F);
      hollowmasksheild1.setTextureSize(64, 128);
      hollowmasksheild1.mirror = true;
      setRotation(hollowmasksheild1, 0F, 0F, -0.1570796F);
      hollow_mask_sheild3 = new ModelRenderer(this, 0, 112);
      hollow_mask_sheild3.addBox(1.5F, 1F, -3F, 2, 6, 6);
      hollow_mask_sheild3.setRotationPoint(1F, 7F, 0F);
      hollow_mask_sheild3.setTextureSize(64, 128);
      hollow_mask_sheild3.mirror = true;
      setRotation(hollow_mask_sheild3, 0F, 0F, 0.2268928F);
      hollow_mask_sheild2 = new ModelRenderer(this, 0, 99);
      hollow_mask_sheild2.addBox(1.5F, -3F, -4F, 2, 5, 8);
      hollow_mask_sheild2.setRotationPoint(1F, 7F, 0F);
      hollow_mask_sheild2.setTextureSize(64, 128);
      hollow_mask_sheild2.mirror = true;
      setRotation(hollow_mask_sheild2, 0F, 0F, 0.0523599F);
      skullmask2 = new ModelRenderer(this, 45, 62);
      skullmask2.addBox(-3.5F, 6F, 5F, 7, 5, 1);
      skullmask2.setRotationPoint(0F, 0F, 0F);
      skullmask2.setTextureSize(64, 128);
      skullmask2.mirror = true;
      setRotation(skullmask2, 0F, -0.6108652F, 0F);
      skullmask3 = new ModelRenderer(this, 45, 68);
      skullmask3.addBox(-2.5F, 9F, 7.5F, 5, 3, 1);
      skullmask3.setRotationPoint(0F, 0F, 0F);
      skullmask3.setTextureSize(64, 128);
      skullmask3.mirror = true;
      setRotation(skullmask3, -0.2617994F, -0.6108652F, 0F);
      skullmask1 = new ModelRenderer(this, 45, 60);
      skullmask1.addBox(-3F, 5F, 5F, 6, 1, 1);
      skullmask1.setRotationPoint(0F, 0F, 0F);
      skullmask1.setTextureSize(64, 128);
      skullmask1.mirror = true;
      setRotation(skullmask1, 0F, -0.6108652F, 0F);
      hornMaskBackHorn1 = new ModelRenderer(this, 56, 51);
      hornMaskBackHorn1.addBox(-1.2F, 4F, 7.5F, 1, 2, 1);
      hornMaskBackHorn1.setRotationPoint(0F, 0F, 0F);
      hornMaskBackHorn1.setTextureSize(64, 128);
      hornMaskBackHorn1.mirror = true;
      setRotation(hornMaskBackHorn1, -0.418879F, 0.5585054F, 0F);
      hornMaskBack2 = new ModelRenderer(this, 44, 53);
      hornMaskBack2.addBox(-2F, 8F, 4.5F, 5, 3, 1);
      hornMaskBack2.setRotationPoint(0F, 0F, 0F);
      hornMaskBack2.setTextureSize(64, 128);
      hornMaskBack2.mirror = true;
      setRotation(hornMaskBack2, 0F, 0.5585054F, 0F);
      hornMaskBack1 = new ModelRenderer(this, 44, 51);
      hornMaskBack1.addBox(-1.5F, 7F, 4.5F, 4, 1, 1);
      hornMaskBack1.setRotationPoint(0F, 0F, 0F);
      hornMaskBack1.setTextureSize(64, 128);
      hornMaskBack1.mirror = true;
      setRotation(hornMaskBack1, 0F, 0.5585054F, 0F);
      hornMaskBackHorn2 = new ModelRenderer(this, 56, 51);
      hornMaskBackHorn2.addBox(1.1F, 4F, 7.5F, 1, 2, 1);
      hornMaskBackHorn2.setRotationPoint(0F, 0F, 0F);
      hornMaskBackHorn2.setTextureSize(64, 128);
      hornMaskBackHorn2.mirror = true;
      setRotation(hornMaskBackHorn2, -0.418879F, 0.5585054F, 0F);
      hornMaskBack3 = new ModelRenderer(this, 44, 57);
      hornMaskBack3.addBox(-1.5F, 10F, 5.9F, 4, 2, 1);
      hornMaskBack3.setRotationPoint(0F, 0F, 0F);
      hornMaskBack3.setTextureSize(64, 128);
      hornMaskBack3.mirror = true;
      setRotation(hornMaskBack3, -0.1396263F, 0.5585054F, 0F);
      
      leftarm.addChild(furarmL);
      rightarm.addChild(furarmR);
      
      leftarm.addChild(hollowmasksheild1);
      leftarm.addChild(hollow_mask_sheild2);
      leftarm.addChild(hollow_mask_sheild3);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    body.render(f5);
    rightarm.render(f5);
    leftarm.render(f5);
    rightleg.render(f5);
    leftleg.render(f5);
    hairback.render(f5);
    //furarmR.render(f5);
    //furarmL.render(f5);
    head.render(f5);
    mask3.render(f5);
    mask1.render(f5);
    eyeL.render(f5);
    mask5.render(f5);
    mask2.render(f5);
    eyeR.render(f5);
    horn3R.render(f5);
    horn1R.render(f5);
    horn2R.render(f5);
    horn1L.render(f5);
    horn2L.render(f5);
    horn3L.render(f5);
    hair2.render(f5);
    hair1.render(f5);
    hair3.render(f5);
    hair3L.render(f5);
    hair1L.render(f5);
    hair2L.render(f5);
    hair6L.render(f5);
    hair5L.render(f5);
    hair4.render(f5);
    hair7.render(f5);
    hair5.render(f5);
    hair6.render(f5);
    hair1R.render(f5);
    hair2R.render(f5);
    hair3R.render(f5);
    hair5R.render(f5);
    hair6R.render(f5);
    //hollowmasksheild1.render(f5);
    //hollow_mask_sheild3.render(f5);
    //hollow_mask_sheild2.render(f5);
    skullmask2.render(f5);
    skullmask2.render(f5);
    skullmask1.render(f5);
    hornMaskBackHorn1.render(f5);
    hornMaskBack2.render(f5);
    hornMaskBack1.render(f5);
    hornMaskBackHorn2.render(f5);
    hornMaskBack3.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    
    
    this.rightarm.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 2.0F * f1 * 0.5F;
    this.leftarm.rotateAngleX = MathHelper.cos(f * 0.6662F) * 2.0F * f1 * 0.5F;
    this.rightarm.rotateAngleZ = 0.0F;
    this.leftarm.rotateAngleZ = 0.0F;
    this.rightleg.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
    this.leftleg.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;
    this.rightleg.rotateAngleY = 0.0F;
    this.leftleg.rotateAngleY = 0.0F;
  }

}
